%% Numerical Methods Project
%%
% *Group Members*
%
% * Dipshit 1
% * Dipshit 2
% * Random Person
% * The Other Guy
%
%% Prart I: Exploration of Stablity
%%
% *1)*
%
% Given the ODE
%
% $$\frac{\delta y}{\delta x}=-4y$$
%
% with the initial condition $y(0)=2$ on the interval $x\in(0,10)$
%
% # Calculate  the  largest  step  size, $\Delta x^{\ast}$,  required  to  maintain  stability 
%   of  the  numerical  solution  to  this equation using explicit Euler
%   method.
% # Choose a step size five times smaller than this value,  $0.2 \Delta x^{\ast}$.  Solve the ODE with explicit Euler
%   method using this step size with MATLAB (self-written programs).
% # Choose a step size $20\%$ larger than this value, $1.2 \Delta x^{\ast}$.  Solve the ODE with explicit Euler method
%   using this step size with MATLAB (self-written programs).
% # Repeat parts (2) and (3) with implicit Euler method using MATLAB.
% # Suppose that you now want to solve this equation with a $2^{nd}$ order method (modified Euler in a form of predictor-corrector).
%   Solve the above equation with the predictor-corrector method and step sizes of $0.2 \Delta x^{\ast}$ and $1.2 \Delta x^{\ast}$.
%   Do you observe an instability?
% # Modified  Euler  method  can  be  used  in  an  implicit  form  similar  to  the  way  of  implicit  Euler 
%   (without doing a predictor-corrector step, but with solving for $y_{i+1}$), since this equation is linear.
%   Solve the above equation with the modified Euler method in the implicit form and step sizes of $0.2 \Delta x^{\ast}$ and $1.2 \Delta x^{\ast}$.
%   Do you observe an instability now?
% # Plot all the solutions, including the analytical solution to this problem, on the same plot-one plot for each step size.
%   Discuss your results.
%%
% *2)*
%
% Investigate the stability of the following numerical schemes for the ODE
%
% $$\frac{\delta y}{\delta x}=-\alpha y$$
%
% for $\alpha>0$. Show whether the scheme is conditionally or unconditionally stable. Derive the stability threshold on the step
% size $\Delta x$ if the scheme is conditionally stable.
%
% # Modified Euler Method in implicit form:
% 
% $$y_{i+1}=y_i+\frac{h}{2}[f(x_i,y_i)+f(x_{i+1},y_{i+1})]$$
%
% # *Extra Credit* Modified Euler Method in a predictor-corrector form:
%
% $$y_{i+1}=y_i+\frac{h}{2}[f(x_i,y_i)+f(x_{i+1},y_i+hf(x_i,y_i))]$$
%
%% Part II: Exploration of Accuracy
%
% *3)*
%
% Consider the following first-order ODE:
%
% $$\frac{\delta y}{\delta x}=x^2-\frac{2 y}{x}$$
%
% with $y(1)=2$. Numerically solve on the interval from $x=1$ to $x=5$ using
% 
% # Explicit Euler method
% # Implicit Euler method
% # Modified Euler method (predictor-corrector)
% # Modified Euler method in an implicit form
%
% and explore the accuracy of these methods. The anaytical solution to this ODE is
%
% $$y=\frac{9}{5x^2}+\frac{x^3}{5}$$
%
% For each method,
%
% * Write the MATLAB function that solves the ODE by using the number of intervals $N$ as an input argument.
% * Solve the ODE using your MATLAB function for $N$ equal to $4,8,16,32$. Calculate the step size $h$ inside the function.
% * Calculate the $E_{L_2}$ error norm between the true solution and the numerical solution for each $N$.
%   Recall that the $E_{L_2}$ error norm is defied as
%
% $$E_{L_2}=\sqrt{\frac{\sum^{N+1}_{i=1}(y_i^{numer}-y_i^{true})^2}{N+1}}$$
%
% The following plots should be persented:
%
% * Plot your solutions for all the methods (1)-(4), along with the anaytical solution , on the plot for $N=4$.
%   Do not print out the values at your grid points.
% * Plot your solutions for all the methods (1)-(4), along with the anaytical solution , on the plot for $N=32$.
%   Do not print out the values at your grid points.
% * Plot the values of the $E_{L_2}$ error norm for all the methods (1)-(4), as a function of $N$ on the same plot,
%   in log-log scale. Estimate the order of convergence for each method from this plot.
%
%% Part III: Application
% *4)*
%
% An inductor and a nonlinear resistor with resistance $R=500+250 I^2\ \Omega$ are connected in series with a DC
% power source and a switch, as shown in Figure 1. The switch is initially open and then is closed at time $t=0$.
% The current $I$ in the circuit for $t>0$ is determined from the solution of the equation:
%
% $$\frac{\delta I}{\delta t}=\frac{V_0}{L}-\frac{R}{L}I$$
%
% For $V_0=500\ V$ and $L=15\ H$, determine and plot the current as a function of time for $t\in[0,0.1]\ s$.
%
% <<Figure 1.PNG>>
%
%
% # Solve the problem with the explicit Euler method and a modified Euler method (predictor-corrector) using 
%   step size of $0.005\ s$. Plot both solutions as $I(t)$ on the same plot. Can you trust the explicit Euler
%   solution? Does it look strange?
% # To figure out what is going on, reduce the step size to $0.001\ s$ and repeat both calculations. Plot both solutions
%   as $I(t)$ on the same plot. Does everything look okay now?
% # Now increase the step size to $0.01\ s$ and repeat both calculations. Plot both solutions as $I(t)$ on the 
%   same plot. What do you observe? Can you comment on what is happening with the explicit Euler solution and
%   why it did not look right in part (1)?
% # Now increase the step size to $0.015\ s$ and repeat both calculations. Plot both solutions as $I(t)$ on diffrent
%   plots. What can you say now ablout the predictor-corrector method?
%% Functions
function [y,t,h]=Euler_explicit(F,tspan,y0,N)
    % This ODE solver utilizes Euler's explicit method to evaluate the function
    % $y'=F(y,x)$ over to interval provided by tspan. This method is unstable for large step sizes and
    % is first-order accurate.
    
    h=(tspan(2)-tspan(1))/N;
    t=tspan(1):h:tspan(2);  
    y=zeros(1,N+1);
    y(1)=y0;
    for i=1:N
        y(i+1)=y(i)+h*F(t(i),y(i));
    end
end

function [y,t,h]=Euler_implicit(F,tspan,y0,N)
    % This ODE solver utilizes Euler's implicit method to evaluate the function
    % $y'=G(y,x)$ over to interval provided by tspan. This method is unconditionally stable and
    % is first-order accurate. Note that the function $F$ only contains $y_i$ terms and does not depend
    % on $y_{i+1}$.
    
    h=(tspan(2)-tspan(1))/N;
    t=tspan(1):h:tspan(2);
    
    y=zeros(1,N+1);

    y(1)=y0;

    for i=1:N
        y(i+1)=F(0,y(i),h);
    end
end

function [y,t,h]=mod_Euler(F,tspan,y0,N)
    % This ODE solver utilizes the modified Euler's in its predictor-corrector form to evaluate the function
    % $y'=F(y,x)$ over to interval provided by tspan. This method is unstable for large step sizes and
    % is second-order accurate.
    
    h=(tspan(2)-tspan(1))/N;
    t=tspan(1):h:tspan(2);  
    y=zeros(1,N+1);
    
    y(1)=y0;

    for i=1:N
      y_guess=y(i)+h*F(t(i),y(i));
      y(i+1)=y(i)+(h/2)*(F(t(i),y(i))+F(t(i+1),y_guess));
    end
end

